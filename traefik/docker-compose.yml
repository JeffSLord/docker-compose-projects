version: "3.8"
services:
  traefik:
    image: "traefik:v2.3"
    container_name: "traefik"
    networks:
      - traefik
    restart: unless-stopped
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.mc.address=:25565
      - --providers.docker=true
      - --api.dashboard=true
      - --api.insecure=true
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesResolvers.myresolver.acme.dnsChallenge.provider=cloudflare
      # Staging server
      # - --certificatesResolvers.myresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesResolvers.myresolver.acme.email=${EMAIL}
        #- --certificatesResolvers.myresolver.acme.storage=acme.json 
      - --certificatesResolvers.myresolver.acme.storage=/acme/acme.json
      - --certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=web
    environment:
        - CF_API_EMAIL=${EMAIL}
        - CF_API_KEY=${CF_API_KEY}
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      # https
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #- /home/server/volumes/traefik/acme.json:/acme.json
      - /home/server/volumes/traefik/acme:/acme
    labels:
      - traefik.http.routers.traefik.rule=Host(`traefik.jeffslord.com`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      # - traefik.http.middlewares.traefik.basicauth.users=server:$$apr1$$dmVBAsix$$7s9nj9HLlr/D0MAdvTqit1
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=myresolver

      # Global redirection: http to https
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:(www\.)?.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=wwwtohttps

      # Global redirection: https (www.) to https
      - traefik.http.routers.wwwsecure-catchall.rule=HostRegexp(`{host:(www\.).+}`)
      - traefik.http.routers.wwwsecure-catchall.entrypoints=websecure
      - traefik.http.routers.wwwsecure-catchall.tls=true
      - traefik.http.routers.wwwsecure-catchall.middlewares=wwwtohttps

      # middleware: http(s)://(www.) to  https://
      - traefik.http.middlewares.wwwtohttps.redirectregex.regex=^https?://(?:www\.)?(.+)
      - traefik.http.middlewares.wwwtohttps.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.wwwtohttps.redirectregex.permanent=true
#new
    domainname: jeffslord.com
    #dns:
    #  - 192.168.1.200
    #  - 192.168.1.1


  pihole:
    container_name: pihole
    networks:
      - traefik
    domainname: jeffslord.com
    #hostname: pihole
    image: pihole/pihole:latest
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    ports:
        #      - '0.0.0.0:53:53/tcp'
      - '0.0.0.0:53:53/udp'
      - '0.0.0.0:67:67/udp'
      - '0.0.0.0:8053:80/tcp'
    volumes:
      - /home/server/volumes/pihole/:/etc/pihole/
      - /home/server/volumes/pihole/dnsmasqd:/etc/dnsmasq.d/
        #- ./pihole.log:/var/log/pihole.log
      - /home/server/volumes/pihole/pihole.log:/var/log/pihole.log
    environment:
      ServerIP: 192.168.1.200
      PROXY_LOCATION: pihole
      VIRTUAL_HOST: pihole.jeffslord.com
      VIRTUAL_PORT: 80
      TZ: 'America/Chicago'
      WEBPASSWORD: myserver
      DNS1: 127.0.0.1
      DNS2: 1.1.1.1
    restart: unless-stopped
    labels:
      # required when using --docker.exposedbydefault=false
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.jeffslord.com`)"
      - "traefik.http.routers.pihole.entrypoints=websecure"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.routers.pihole.tls.certresolver=myresolver"
#endnew
  

networks:
  traefik:
     name: traefik


# sudo systemctl stop systemd-resolved
# sudo systemctl disable systemd-resolved


# sudo systemctl enable systemd-resolved
# sudo systemctl start systemd-resolved
